--EJ1
CREATE TABLE auditaremple(
col varchar2(200)
);

CREATE OR REPLACE TRIGGER subidaSalario
    AFTER UPDATE OF SALARIO
    ON EMPLE 
    FOR EACH ROW
    WHEN (new.salario-old.salario>old.salario*0.05 )
      BEGIN
        INSERT INTO auditaremple values (TO_CHAR(SYSDATE,'YYYY:hh24')||'*'||:old.salario||'*'||:new.salario);
      END;
      
UPDATE EMPLE SET SALARIO = 100000;


--EJ2
CREATE OR REPLACE TRIGGER auditarAcciones
    BEFORE INSERT OR DELETE 
    ON EMPLE 
    FOR EACH ROW
        DECLARE
        BEGIN
            IF INSERTING THEN 
                INSERT INTO auditaremple values (TO_CHAR(SYSDATE,'YYYY:hh24')||'*'||:new.EMP_NO||'*'||'INSERCIÓN');
            ELSIF DELETING THEN 
                INSERT INTO auditaremple values (TO_CHAR(SYSDATE,'YYYY:hh24')||:old.EMP_NO||'*'||'BORRADO');
            END IF;
        END;
        
        
DELETE EMPLE WHERE EMP_NO ='7369';


---EJ3

CREATE OR REPLACE TRIGGER impedirReduccion 
BEFORE UPDATE OF SALARY ON EMPLOYEES
    FOR EACH ROW
    WHEN (old.SALARY<new.SALARY)
        BEGIN
            RAISE_APPLICATION_ERROR(-20111, 'No se puede reducir el salario');
        END;
        
    
UPDATE EMPLOYEES SET SALARY = 120000 WHERE EMPLOYEE_ID = 100;


--EJ4
CREATE TABLE AUDITADEPARTMENT
nombre_usuario varchar2(15),
operacion varchar2(15),
fecha date;

CREATE OR REPLACE TRIGGER EJ4
AFTER INSERT OR DELETE OR UPDATE ON DEPARTMENTS
    FOR EACH ROW 
        BEGIN
            IF INSERTING THEN
                INSERT INTO AUDITADEPARTMENT VALUES (user,'ALTA',SYSDATE);
            END IF;
            IF UPDATING THEN
                INSERT INTO AUDITADEPARTMENT VALUES (user,'MODIFICACIÓN',SYSDATE);
            END IF;
            IF DELETING THEN
                INSERT INTO AUDITADEPARTMENT VALUES (user,'BAJA',SYSDATE);
            END IF;
        END;

--EJ5 
CREATE OR REPLACE PROCEDURE EJ5
AS
    CURSOR c_conteo IS SELECT DEPARTMENT_ID FROM DEPARTMENTS FOR UPDATE;
BEGIN
    
    FOR v_conteo IN c_conteo LOOP
        UPDATE DEPARTMENTS SET N_EMPLEADOS = (SELECT COUNT(*) FROM EMPLOYEES WHERE DEPARTMENT_ID = V_CONTEO.DEPARTMENT_ID) WHERE CURRENT OF c_conteo;
                    
    END LOOP;
END; 
/
BEGIN
EJ5();
END;
CREATE OR REPLACE TRIGGER EJ5
AFTER INSERT OR DELETE ON EMPLOYEES
FOR EACH ROW
    BEGIN
        IF INSERTING THEN
            UPDATE DEPARTMENTS SET N_EMPLEADOS = N_EMPLEADOS+1
            WHERE DEPARTMENT_ID=:new.DEPARTMENT_ID;
        ELSE
            UPDATE DEPARTMENTS SET N_EMPLEADOS = N_EMPLEADOS-1
            WHERE DEPARTMENT_ID =:old.department_id;
        END IF;
    END;
    
DELETE FROM EMPLOYEES WHERE EMPLOYEE_ID=100;


--EJ6 
CREATE OR REPLACE PROCEDURE EJ6
AS
    CURSOR c_suma IS SELECT PUB_ID FROM PUBLISHER FOR UPDATE;
    BEGIN
       FOR v_suma IN c_suma LOOP
        UPDATE PUBLISHER SET EJEMPLARES_VENDIDOS = (SELECT SUM(YTD_SALE) FROM TITLE WHERE PUB_ID = v_suma.PUB_ID) WHERE CURRENT OF c_suma;
       END LOOP;
    END;
    
BEGIN
EJ6();
END;
--EJ7
CREATE OR REPLACE TRIGGER EJ7
AFTER UPDATE OF YTD_SALE ON TITLE
FOR EACH ROW
BEGIN
    UPDATE PUBLISHER SET EJEMPLARES_VENDIDOS = EJEMPLARES_VENDIDOS + (:new.YTD_SALE - :old.YTD_SALE) WHERE :new.pub_id = pub_id;
END;
/
UPDATE TITLE SET YTD_SALE = YTD_SALE + 1 WHERE PUB_ID = 1389;
--EJ8
--EJ9 
--EJ10